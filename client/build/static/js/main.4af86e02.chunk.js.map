{"version":3,"sources":["components/Nav.js","components/Jumbotron.js","components/ViewInfo.js","components/BookCard.js","components/Form.js","utils/API.js","pages/Books.js","pages/Saved.js","App.js","index.js"],"names":["Nav","className","to","Jumbotron","ViewInfo","props","href","link","target","rel","BookCard","title","authors","image","description","button","src","alt","Form","children","bookInfo","console","log","axios","get","post","bookId","delete","Books","state","books","author","isOpen","showModal","setState","hideModal","handleInputChange","event","name","value","handleSave","id","selectBookData","find","book","volumeInfo","API","imageLinks","smallThumbnail","infoLink","then","res","catch","err","handleFormSubmit","preventDefault","inputAuthor","inputTitle","length","data","items","handleClearSearchResults","alert","Modal","show","this","onHide","Header","Body","Footer","Button","variant","onClick","onChange","type","map","bookData","undefined","key","Component","SavedBooks","savedBooks","viewAllSaved","handleDelete","saved","_id","App","exact","path","component","Saved","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4af86e02.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./componentStyle.css\"\r\n\r\nfunction Nav (){\r\n    return (\r\n    <div>\r\n\r\n        <nav className=\"navbar navbar-light nav\">\r\n        <div className=\"container-fluid\">\r\n            {/* <a class=\"navbar-brand\" href=\"#\">Navbar</a> */}\r\n            \r\n                <Link className=\"navbar-brand\" to=\"/\"><h2>Google Books</h2></Link>\r\n                <Link className=\"nav-link  navSecondary push-right\" to=\"/\">Search for Books</Link>\r\n                <Link className=\"nav-link  navSecondary\" to=\"/saved\">View Saved Books</Link>\r\n             \r\n        </div>\r\n        </nav>\r\n    </div>\r\n)};\r\n\r\n\r\nexport default Nav;","//reusable code for saved and books search \r\nimport React from \"react\";\r\nimport \"./componentStyle.css\";\r\n\r\nfunction Jumbotron (){\r\n    return(\r\n        <div>\r\n            <div className=\"jumbotron text-center\">\r\n                <h1 className=\"display-4\">Google Books Search with React</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jumbotron;","import React from \"react\";\r\n\r\nfunction ViewInfo (props) {\r\n    return (\r\n        <div>\r\n            <br></br>\r\n            <span className=\"link-container\">\r\n               <a href={props.link} target=\"_blank\"  rel=\"noopener noreferrer\">View more on Google Play</a>\r\n            </span>\r\n            <br></br>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewInfo;","//this will contain reusable code styling for both SAVED and Book Results \r\nimport React from \"react\";\r\nimport ViewInfo from \"./ViewInfo.js\";\r\nimport \"./componentStyle.css\";\r\n\r\n function BookCard ({ \r\n    title,\r\n    authors,\r\n    image,\r\n    description,\r\n    link,\r\n    button\r\n}) {\r\n    return(\r\n        <div className=\"data-book-div\">\r\n            <ul className=\"data\">\r\n                <li>\r\n                <img className=\"booksImg\"\r\n                 src={image}\r\n                 alt={title}\r\n                 />\r\n                <br></br>\r\n                <h5>Title: {title}</h5>\r\n                <h6>Author: {authors} </h6>\r\n                {description}\r\n                 <br></br>\r\n                <ViewInfo \r\n                    link={link}\r\n                 /> \r\n                  <br></br>\r\n                  {button}\r\n                \r\n                 </li>\r\n            </ul>\r\n           \r\n        </div>\r\n         \r\n    )    \r\n \r\n}\r\n\r\nexport default BookCard;","//this will handle the form  style \r\nimport React from \"react\";\r\n\r\nfunction Form (props){\r\n    return (\r\n        <div>\r\n         {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;","import axios from \"axios\"; //we will be using axios for googlebooks and our db\r\n\r\nconst key=\"AIzaSyBqJPwVVWSuyX3s_ZdJorHskPEAMfmgwGg\";\r\nconst queryURL= \"https://www.googleapis.com/books/v1/volumes?api_key=\" + key +\"&q=\"; \r\n\r\nexport default {\r\n    //get all books. passing in bookInfo which will be entered by user\r\n    getBooks: function(bookInfo) {\r\n        console.log(bookInfo)\r\n        return axios.get(queryURL + bookInfo)\r\n    },    \r\n\r\n    //save a book to our mongodb \r\n    saveBooks: function(bookInfo) {\r\n        return axios.post(\"/api/savebook\", bookInfo)\r\n    },\r\n\r\n    //view all saved books in db \r\n    viewSaved: function(){\r\n        return axios.get(\"/api/allbooks\")\r\n    },\r\n\r\n    //delete a book\r\n    deleteBook: function (bookId) {\r\n        return axios.delete(\"/api/deletebook/\" + bookId)\r\n    }\r\n} \r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron.js\";\r\nimport BookCard from \"../components/BookCard.js\";\r\nimport Form from \"../components/Form.js\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Button from 'react-bootstrap/Button'\r\nimport API from \"../utils/API.js\"; \r\nimport \"./style.css\";\r\n\r\nclass Books extends Component {\r\n    state = {\r\n        books: [],\r\n        author: \"\",\r\n        title: \"\",\r\n        isOpen: false\r\n    };\r\n\r\n    //modal\r\n    showModal = () => {\r\n        this.setState({\r\n            isOpen: true\r\n        })\r\n    };\r\n\r\n    hideModal = () => {\r\n        this.setState({\r\n            isOpen: false,\r\n        })\r\n    };\r\n\r\n    \r\n    //handleInputChange (input info to search for a book)\r\n    handleInputChange = event => {\r\n        const {name, value} = event.target\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    //handleSave (saved a  book to our db)\r\n    handleSave = id => {\r\n        // console.log(id)\r\n        const selectBook = this.state.books.find(book => book.id === id)\r\n        const selectBookData = selectBook.volumeInfo\r\n         API.saveBooks({\r\n            title: selectBookData.title,\r\n            authors: selectBookData.authors,\r\n            image: selectBookData.imageLinks.smallThumbnail,\r\n            description: selectBookData.description,\r\n            link: selectBookData.infoLink\r\n        })\r\n        .then(res => this.showModal())\r\n          \r\n        .catch(err => console.log(err))\r\n    };\r\n\r\n    //onsubmit \r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        const inputAuthor = this.state.author;\r\n        const inputTitle = this.state.title;\r\n\r\n        //Author only \r\n        if(inputTitle.length === 0 && inputAuthor.length >= 1){\r\n            API.getBooks(inputTitle + \"+inauthor:\"+ inputAuthor)\r\n            .then(res => this.setState({\r\n                books: res.data.items\r\n            }))\r\n            .catch(err => console.log(err))\r\n        }\r\n        //Author and Title \r\n        else if(inputTitle.length > 0 && inputAuthor.length >= 1){\r\n            API.getBooks(inputTitle + \"+inauthor:\"+ inputAuthor)\r\n            .then(res => this.setState({\r\n                books: res.data.items\r\n            }))\r\n            .catch(err => console.log(err))\r\n        }\r\n         //Title only\r\n        else if(inputTitle.length > 0 && inputAuthor.length === 0){\r\n            API.getBooks(inputTitle)\r\n            .then(res => this.setState({\r\n                books: res.data.items\r\n            }))\r\n            .catch(err => console.log(err))\r\n        }\r\n\r\n        //clear form\r\n        this.setState({\r\n            title: \"\",\r\n            author:\"\"\r\n        });\r\n\r\n\r\n    };\r\n\r\n    handleClearSearchResults = event => {\r\n        event.preventDefault();\r\n\r\n        if(this.state.books.length === 0){\r\n            alert(\"No search results to delete.\")\r\n        }\r\n\r\n        this.setState({\r\n            books: []\r\n        })\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Modal show={this.state.isOpen} onHide=\"true\">\r\n                    <Modal.Header>Saved!</Modal.Header>\r\n                    <Modal.Body>Successfully Saved.</Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"primary cancelBtn\"\r\n                           onClick={this.hideModal}>\r\n                               Ok\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Jumbotron />\r\n                <div className=\"form-container\">\r\n                <Form> <h3 id=\"startMsg\">Enter Title and/or Author</h3>\r\n                <form className=\"form-group\">\r\n                        <p>Title:</p>\r\n                            <input \r\n                            value={this.state.title}\r\n                            name=\"title\"\r\n                            onChange={this.handleInputChange}\r\n                            type=\"text\"\r\n                        />\r\n                        <p>Author:</p>\r\n                        <input\r\n                            value={this.state.author}\r\n                            name=\"author\"\r\n                            onChange={this.handleInputChange}\r\n                            type=\"text\"\r\n                        />\r\n                          <Button \r\n                            variant=\"primary submitBtn\"  \r\n                            onClick={this.handleFormSubmit}>\r\n                            Submit\r\n                         </Button>\r\n                          <Button  \r\n                            variant=\"info clearBtn\"\r\n                            onClick={this.handleClearSearchResults}>\r\n                            Clear Search Results\r\n                          </Button>\r\n                     </form> \r\n    \r\n                </Form>   \r\n                </div>\r\n\r\n                <div>\r\n                <h1 className=\"resultHead\">Results</h1>\r\n                {this.state.books.length > 0 ? (\r\n                  <div className=\"bookInfo-container\">\r\n                     {this.state.books.map(book => {\r\n                        const bookData = book.volumeInfo\r\n                        // console.log(bookData.imageLinks === undefined)\r\n                      if(bookData.imageLinks === undefined){\r\n                        return(\r\n                            <BookCard \r\n                               key={book.id}\r\n                               title={bookData.title}\r\n                               authors={bookData.authors}\r\n                               description={bookData.description}\r\n                               link={bookData.infoLink}\r\n                               image={<h2>Sorry no image</h2>} \r\n                               button={<Button variant=\"outline-primary saveBtn\"\r\n                                        onClick={() => this.handleSave(book.id)}>\r\n                                        Click to save \"{bookData.title}\"\r\n                                      </Button>} \r\n                           />\r\n                           );\r\n                      }\r\n                        return(\r\n                         <BookCard \r\n                            key={book.id}\r\n                            title={bookData.title}\r\n                            authors={bookData.authors}\r\n                            description={bookData.description}\r\n                            link={bookData.infoLink}\r\n                            image={bookData.imageLinks.smallThumbnail} \r\n                            button={<Button variant=\"outline-primary saveBtn\"\r\n                                    onClick={() => this.handleSave(book.id)}>\r\n                                    Click to save \"{bookData.title}\"\r\n                                   </Button>} \r\n                        />\r\n                        );\r\n                    })} \r\n                    </div>) : (\r\n                    <h3 className=\"nothingMsg\">Nothing to display</h3>\r\n                )}\r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Books;","import React, {Component} from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron.js\";\r\nimport BookCard from \"../components/BookCard.js\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport API from \"../utils/API\";\r\nimport Button from 'react-bootstrap/Button'\r\nimport \"./style.css\";\r\n\r\nclass SavedBooks extends Component {\r\n    state = {\r\n        savedBooks:[],\r\n        isOpen: false,\r\n    }\r\n\r\n    componentDidMount() { \r\n        this.viewAllSaved();\r\n    }\r\n\r\n    //modal\r\n    showModal = () => {\r\n        this.setState({\r\n            isOpen: true\r\n        })\r\n    };\r\n\r\n    hideModal = () => {\r\n        this.setState({\r\n            isOpen: false\r\n        })\r\n    };\r\n\r\n    viewAllSaved = () => {\r\n        API.viewSaved()\r\n        .then(res =>this.setState({savedBooks: res.data})\r\n        )\r\n        // .then(res =>console.log(res.data))\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    handleDelete = (id)=> {\r\n        console.log(id)\r\n        API.deleteBook(id)\r\n        .then(res => \r\n            this.viewAllSaved(),\r\n            this.showModal()\r\n         )\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    render() {\r\n    return (\r\n        <div>\r\n            <Modal show={this.state.isOpen} onHide=\"true\">\r\n                <Modal.Header>Deleted Saved</Modal.Header>\r\n                <Modal.Body>Successfully Deleted</Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"primary cancelBtn\"\r\n                        onClick={this.hideModal}>\r\n                              Ok\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Jumbotron />\r\n            <h1 className= \"resultHead\">Saved Books</h1>\r\n            {this.state.savedBooks.length ? ( \r\n            <div className=\"bookInfo-container\">\r\n            {this.state.savedBooks.map(saved => {\r\n                return (\r\n                    <BookCard \r\n                        key={saved._id}\r\n                        id={saved._id}\r\n                        title={saved.title}\r\n                        authors={saved.authors}\r\n                        image={saved.image}\r\n                        description={saved.description}\r\n                        link={saved.link}\r\n                        button={<Button \r\n                                variant=\"outline-info deleteBtn\"\r\n                                onClick={() => this.handleDelete(saved._id)}>\r\n                                Delete \"{saved.title}\"\r\n                                </Button>} \r\n                    />\r\n                 );\r\n            })}\r\n           </div>) : (\r\n               <h3 className=\"nothingMsg\">Nothing Saved</h3>\r\n           )}\r\n        </div>\r\n        \r\n    )\r\n\r\n    }\r\n}\r\n\r\nexport default SavedBooks;","import React from \"react\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport Books from \"./pages/Books\";\nimport Saved from \"./pages/Saved\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n    <div>\n      <Nav />\n      <Route exact path=\"/\" component={Books} />\n      <Route exact path=\"/saved\" component={Saved} />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}